#!/usr/bin/env bash
# Description: Generate and set a random hostname on Linux
# Requires: sed, logger
# Usage: set-random-hostname

__set_random_hostname() {

  # set a prefix if you like
  local prefix="server_"
  local new_hostname="${prefix}$(head -n1 < <(fold -w6 < <(tr -cd 'a-z0-9' < /dev/urandom)))"

  # Check if new_hostname length exceeds 63 characters
  if [[ ${#new_hostname} -gt 63 ]]; then
    echo "Generated hostname is too long. Exiting."
    return 1
  fi

  # Check if necessary commands are available
  for cmd in sed logger; do
    if ! command -v $cmd &> /dev/null; then
      echo "$cmd is not installed or accessible. Exiting."
      return 1
    fi
  done

  # Check if hostnamectl is available
  if command -v hostnamectl &> /dev/null; then
    # set new hostname using hostnamectl
    if ! hostnamectl set-hostname "$new_hostname"; then
      echo "Failed to set hostname using hostnamectl. Exiting."
      return 1
    fi
  else
    # set new hostname for the running system using hostname command
    if ! hostname "$new_hostname"; then
      echo "Failed to set hostname for running system. Exiting."
      return 1
    fi
    # persist the hostname change across reboots
    echo "$new_hostname" > /etc/hostname
  fi

  # backup /etc/hosts
  cp /etc/hosts /etc/hosts.backup

  # set new hostname in /etc/hosts
  # Match the pattern "127.0.1.1" instead of hardcoding line number
  if ! sed -i "/^127\.0\.1\.1\s/c\127.0.1.1       $new_hostname" /etc/hosts; then
    echo "Failed to update /etc/hosts. Restoring from backup."
    cp /etc/hosts.backup /etc/hosts
    return 1
  fi

  # Log to syslog
  logger "Hostname updated to $new_hostname by the randomhostname script"

}

__set_random_hostname
